// <auto-generated />
using LastFinal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LastFinal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240117163600_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InsuranceProductUser", b =>
                {
                    b.Property<int>("InsuranceProductInsuranceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InsuranceProductInsuranceId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("InsuranceProductUser");
                });

            modelBuilder.Entity("LastFinal.Model.AuthorizedUser", b =>
                {
                    b.Property<int>("AuthorizedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorizedId"), 1L, 1);

                    b.Property<string>("AuthorizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorizedId");

                    b.ToTable("AuthorizedUsers");
                });

            modelBuilder.Entity("LastFinal.Model.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LastFinal.Model.InsuranceProduct", b =>
                {
                    b.Property<int>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceId"), 1L, 1);

                    b.Property<int>("AuthorizedId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("Premium")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("InsuranceId");

                    b.HasIndex("AuthorizedId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PackageId");

                    b.HasIndex("TypeId");

                    b.ToTable("InsuranceProducts");
                });

            modelBuilder.Entity("LastFinal.Model.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("LastFinal.Model.Typee", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("Typees");
                });

            modelBuilder.Entity("LastFinal.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InsuranceProductUser", b =>
                {
                    b.HasOne("LastFinal.Model.InsuranceProduct", null)
                        .WithMany()
                        .HasForeignKey("InsuranceProductInsuranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LastFinal.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LastFinal.Model.InsuranceProduct", b =>
                {
                    b.HasOne("LastFinal.Model.AuthorizedUser", "AuthorizedUser")
                        .WithMany("InsuranceProduct")
                        .HasForeignKey("AuthorizedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LastFinal.Model.Category", "Categorie")
                        .WithMany("InsuranceProduct")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LastFinal.Model.Package", "Package")
                        .WithMany("InsuranceProduct")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LastFinal.Model.Typee", "Typee")
                        .WithMany("InsuranceProducts")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizedUser");

                    b.Navigation("Categorie");

                    b.Navigation("Package");

                    b.Navigation("Typee");
                });

            modelBuilder.Entity("LastFinal.Model.AuthorizedUser", b =>
                {
                    b.Navigation("InsuranceProduct");
                });

            modelBuilder.Entity("LastFinal.Model.Category", b =>
                {
                    b.Navigation("InsuranceProduct");
                });

            modelBuilder.Entity("LastFinal.Model.Package", b =>
                {
                    b.Navigation("InsuranceProduct");
                });

            modelBuilder.Entity("LastFinal.Model.Typee", b =>
                {
                    b.Navigation("InsuranceProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
